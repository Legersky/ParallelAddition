Inicialization...
Numeration system: 
Eisenstein_1-block_integer
Alphabet: 
[0, 1, -1, 2, -2, 3, -3]
Input alphabet: 
[0, 1, 2, 3, 4, 5, 6, -2, -6, -5, -4, -3, -1]
Minimal polynomial of ring generator: 
t^2 + t + 1
Embedding: 
-0.500000000000000 + 0.866025403784439*I
Base: 
omega - 1
Minimal polynomial of base:
x^2 + 3*x + 3
Roots of minimal polynomial of base:
[-1.500000000000000? - 0.866025403784439?*I, -1.500000000000000? + 0.866025403784439?*I]
With absolute values:
[1.732050807568877?, 1.732050807568877?]
Image alphabet.png saved to ./outputs/Eisenstein_1-block_integer/img
Image inputAlphabet.png saved to ./outputs/Eisenstein_1-block_integer/img
Image lattice.png saved to ./outputs/Eisenstein_1-block_integer/img
Maximum iterations: 20
Maximum length of input of weight function: 10
Checking alphabet for representatives mod base:
Number of congruence classes mod base is: 3
Alphabet divided into congruence classes:
[[0, 3, -3], [1, -2], [-1, 2]]
=> There are all representatives mod base in the alphabet.
Checking alphabet for representatives mod base-1:
There are all elements of the input alphabet mod base-1 in the alphabet.
Phase 1 - Searching for the Weight Coefficient Set using method None...
Starting Q_0:
[0]
Number of elements in Qk: 1
Added coefficients:
[-omega - 2, omega + 2]
Number of elements in Qk: 3
Added coefficients:
[2*omega + 3, -omega - 1, 1, -2*omega - 3, omega + 1, -1]
Number of elements in Qk: 9
Added coefficients:
[-omega, -2*omega - 4, 2, -2*omega - 2, -3*omega - 4, 3*omega + 4, omega, -2, -omega - 3, omega + 3, 2*omega + 4]
Number of elements in Qk: 20
Added coefficients:
[-omega + 1, 2*omega + 1, -3*omega - 5, -2*omega - 1, -3*omega - 3, 4*omega + 5, omega - 1, 3*omega + 5, -4*omega - 5]
Number of elements in Qk: 29
Added coefficients:
[2*omega, -2*omega, -3*omega - 2, -4*omega - 4, 4*omega + 4]
Number of elements in Qk: 34
Added coefficients:
[-omega + 2, -omega - 4, -3, omega - 2, omega + 4]
Number of elements in Qk: 39
Added coefficients:
[2*omega + 5, -2*omega - 5]
Number of elements in Qk: 41
Added coefficients:
[4*omega + 6, -4*omega - 6]
Number of elements in Qk: 43
Added coefficients:
[-5*omega - 6, 5*omega + 6]
Number of elements in Qk: 45
Added coefficients:
[5*omega + 5, 3*omega + 1, 2*omega - 1, -2*omega + 1, -3*omega - 1, -4*omega - 3, -5*omega - 5]
Number of elements in Qk: 52
Added coefficients:
[3]
Number of elements in Qk: 53
Added coefficients:
[]
The Weight Coefficient Set is:
[0, 1, 2, 3, -omega, -omega + 1, 2*omega - 1, 2*omega, 2*omega + 1, -omega - 1, 2*omega + 3, 2*omega + 4, 2*omega + 5, -3*omega - 2, omega - 1, omega, omega + 1, omega + 2, omega + 3, omega + 4, 4*omega + 4, 4*omega + 5, 4*omega + 6, 5*omega + 5, 5*omega + 6, 3*omega + 1, 3*omega + 4, 3*omega + 5, -4*omega - 6, -4*omega - 5, -4*omega - 4, -4*omega - 3, -3*omega - 5, -3*omega - 4, -3*omega - 3, -3*omega - 1, -5*omega - 6, -5*omega - 5, omega - 2, -2*omega - 5, -2*omega - 4, -2*omega - 3, -2*omega - 1, -2*omega, -2*omega + 1, -omega + 2, -3, -omega - 4, -1, -omega - 3, -omega - 2, -2*omega - 2, -2]
Number of elements: 53
Phase 2 is starting...
Checking one letter inputs...
There is no unique weight coefficient for finite input gained by repetition of letter 1 using method number 4
There is no unique weight coefficient for finite input gained by repetition of letter 2 using method number 4
There is no unique weight coefficient for finite input gained by repetition of letter 3 using method number 4
There is no unique weight coefficient for finite input gained by repetition of letter 5 using method number 4
There is no unique weight coefficient for finite input gained by repetition of letter 6 using method number 4
There is no unique weight coefficient for finite input gained by repetition of letter -6 using method number 4
There is no unique weight coefficient for finite input gained by repetition of letter -4 using method number 4
There is no unique weight coefficient for finite input gained by repetition of letter -3 using method number 4
There is no unique weight coefficient for finite input gained by repetition of letters [1, 2, 3, 5, 6, -6, -4, -3] using method number 4
Elapsed time: 7.839255
Info about algorithm for parallel addition saved to ./outputs/Eisenstein_1-block_integer/Eisenstein_1-block_integer.tex
