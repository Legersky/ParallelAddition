Inicialization...
Numeration system: 
Quadratic+1+3+5_1-block_complex
Alphabet: 
[0, 1, -1, omega + 1, -omega - 1, omega + 2, -omega - 2, omega + 3, -omega - 3]
Input alphabet: 
[0, 1, 2, 2*omega + 2, 2*omega + 3, 2*omega + 4, 2*omega + 5, 2*omega + 6, -2*omega - 5, omega, omega + 1, omega + 2, -2*omega - 6, omega + 4, -omega - 4, -omega - 3, -omega - 1, omega + 3, -omega, -2*omega - 4, -1, -2*omega - 3, -omega - 2, -2*omega - 2, -2]
Minimal polynomial of ring generator: 
t^2 + 3*t + 5
Embedding: 
-1.50000000000000 + 1.65831239517770*I
Base: 
omega
Minimal polynomial of base:
x^2 + 3*x + 5
Roots of minimal polynomial of base:
[-1.500000000000000? - 1.658312395177700?*I, -1.500000000000000? + 1.658312395177700?*I]
With absolute values:
[2.23606797749979?, 2.23606797749979?]
Image alphabet.png saved to ./outputs_WFmethod_4/Quadratic+1+3+5_1-block_complex/img
Image inputAlphabet.png saved to ./outputs_WFmethod_4/Quadratic+1+3+5_1-block_complex/img
Image lattice.png saved to ./outputs_WFmethod_4/Quadratic+1+3+5_1-block_complex/img
Maximum iterations: 20
Maximum length of input of weight function: 15
Checking alphabet for representatives mod base:
Number of congruence classes mod base is: 5
Alphabet divided into congruence classes:
[[0], [1, omega + 1], [-1, -omega - 1], [omega + 2, -omega - 3], [-omega - 2, omega + 3]]
=> There are all representatives mod base in the alphabet.
Checking alphabet for representatives mod base-1:
There are all elements of the input alphabet mod base-1 in the alphabet.
Phase 1 - Searching for the Weight Coefficient Set using method 2...
Starting Q_0:
[0]
Number of elements in Qk: 1
Added coefficients:
[-omega - 1, 1, omega + 1, -1]
Number of elements in Qk: 5
Added coefficients:
[omega, omega + 2, -omega - 2, -omega, -2, 2]
Number of elements in Qk: 11
Added coefficients:
[]
The Weight Coefficient Set is:
[0, 1, 2, omega, omega + 1, omega + 2, -omega - 1, -omega, -1, -omega - 2, -2]
Number of elements: 11
Phase 2 is starting...
Checking one letter inputs...
The longest inputs are:
[(2, 2, 2), (2*omega + 2, 2*omega + 2, 2*omega + 2), (2*omega + 5, 2*omega + 5, 2*omega + 5), (-2*omega - 5, -2*omega - 5, -2*omega - 5), (omega, omega, omega), (-omega - 3, -omega - 3, -omega - 3), (omega + 3, omega + 3, omega + 3), (-omega, -omega, -omega), (-2*omega - 2, -2*omega - 2, -2*omega - 2), (-2, -2, -2)]
Length of one letter input: 3: 
Number of letters with longest input: 10
Searching the Weight Function using method 4...
Length of the window: 1, Number of saved combinations of input digits: 0, To next iteration: 25
Length of the window: 2, Number of saved combinations of input digits: 467, To next iteration: 158
Length of the window: 3, Number of saved combinations of input digits: 3670, To next iteration: 280
Length of the window: 4, Number of saved combinations of input digits: 6176, To next iteration: 824
Length of the window: 5, Number of saved combinations of input digits: 17682, To next iteration: 2918
Length of the window: 6, Number of saved combinations of input digits: 67656, To next iteration: 5294
Length of the window: 7, Number of saved combinations of input digits: 116694, To next iteration: 15656
Length of the window: 8, Number of saved combinations of input digits: 335958, To next iteration: 55442
Length of the window: 9, Number of saved combinations of input digits: 1285464, To next iteration: 100586
Length of the window: 10, Number of saved combinations of input digits: 2217186, To next iteration: 297464
Elapsed time: 26665.263829
Info about algorithm for parallel addition saved to ./outputs_WFmethod_4/Quadratic+1+3+5_1-block_complex/Quadratic+1+3+5_1-block_complex.tex
